#+title: Change log for Emacs-core
#+author: James Dyer
#+email: captainflasmr@gmail.com
#+language: en
#+options: ':t toc:nil author:nil email:nil num:nil title:nil
#+todo: TODO DOING | DONE
#+startup: showall

This document contains the release notes for Emacs-core

* Versions

** <2025-01-01>

Update keybindings and improve deferred loading for =diff-mode=

- Changed backup keybinding from =C-c b= to =<f12>= to align with function key usage 
  for global/system actions.
- Updated =diff-mode= keybinding adjustments to use =with-eval-after-load=:
  - Ensures =M-j= and =M-k= bindings are unset only after =diff-mode= is loaded.
  - Prevents potential issues with uninitialized =diff-mode-map=.
- No changes to functionality; these updates improve keybinding management and load behavior.

** <2024-12-31>

Refactor and update keybindings, configuration, and package setup

- Removed unused or redundant global keybindings, such as:
  - `C-x ;` (my/switch-to-thing)
  - `M-'` (set-mark-command)
  - `M-;` and `M-c` (delete-other-windows)
  - Others redundant to existing functionality or cleanup.
- Updated `M-l` keybinding to `bookmark-jump` from `split-window-horizontally`.
- Unset keybindings in `diff-mode-map` for `M-j` and `M-k`.

- Adjusted package configurations:
  - Removed `gptel`-related setup as it is no longer needed.
  - Updated `chatgpt-shell` quick access command binding from `?l` to `?j`.

** <2024-12-29>

Add "Issues" section and link TODOs to project features in README

- Added a new "Issues" section with TODOs, each linked to related project features.
- Supplemented the section with Emacs Lisp code to auto-generate issue tables.

** <2024-12-28>

Add new Org navigation keybinding and improve Org mode settings

- Added `M-g o` keybinding for `org-goto`, enabling quick navigation within Org files.
- Changed `M-g i` keybinding from using a quoted symbol ('imenu) to a proper function reference (#'imenu).
- Configured Org mode with:
  - `org-goto-interface` set to `outline-path-completionp` for enhanced navigation.
  - `org-outline-path-complete-in-steps` set to `nil` for smoother interface behavior.

** <2024-12-20>

Refactor README.org: Streamline sections and cleanup

- *Cleanup of Redundant Code*:
  - Removed the `my/sync-tab-bar-to-theme` function, which is no longer relevant to the core configuration.
  - Removed the `spelling-core` section, simplifying the configuration by relying on minimal spell-checking features and eliminating auxiliary tools like `hunspell`.

** <2024-12-19>

- Added new settings and sections:
  - `org-agenda-core`: Customized Org Agenda views with yearly and monthly displays.
  - `dwim`: Enhanced "Do What I Mean" functionalities for common operations like file conversion and tagging.
- Introduced a comprehensive build menu (`build-menu`) with CMake integration, custom commands, and keybindings.
- Updated `image-dired` configuration for streamlined image navigation, thumbnails, and management.
- Added new utilities for project and build management (e.g., `change-directory-and-run`, `list-cmake-presets`).
- Refined custom abbrev definitions across multiple modes.

** <2024-12-18>

Replaced tempel with abbrev, will have to write a blog post about this but replacing the following tempel template :

#+begin_src fundamental :tangle no
fundamental-mode ;; Available everywhere
;;
(ja (format-time-string "<%Y-%m-%d>"))
(jT (format-time-string "%Y%m%d%H%M%S"))
(jt (format-time-string "%Y%m%d"))
(ji "(interactive)")
(jl "(lambda ()")
;;
org-mode
;;
(jm "#+hugo: more")
(jg "#+attr_org: :width 300px" n "#+attr_html: :width 100%")
(je "#+attr_org: :width 300px" n "#+attr_html: :class emacs-img")
(jo "---" n "#+TOC: headlines 1 local" n "---")
(jk "#+begin: kanban :layout (\"...\" . 40) :scope nil :range (\"TODO\" . \"DONE\") :sort \"O\" :depth 2 :compressed t" n "#+end:")
(jp "~--APT--~ ")
;;
sh-mode
(jd n "echo \"poop: " p "\"" n)
;;
emacs-lisp-mode
(jd n "(message \"poop: " p "\"\)" n)
;;
ada-mode
(jd n> "Ada.Text_Io.Put_Line \( \"poop: " p "\"\);" n)
;;
c++-mode
(jd n> "std::cout << \"poop: " p "\" << std::endl;" n)
;;
c-mode
(jd n> "fprintf(stderr, \"poop: " p "\"\);" n)
#+end_src

with the following abbrev =abbrev_defs=:

#+begin_src fundamental-mode :tangle no
;;-*-coding: utf-8;-*-
(define-abbrev-table 'ada-mode-abbrev-table
  '(
    ("jd" "Ada.Text_Io.Put_Line (\"poop: \");" nil :count 0)
   ))
(define-abbrev-table 'c++-mode-abbrev-table
  '(
    ("jd" "std::cout << \"poop: \" << std::endl;" nil :count 0)
   ))
(define-abbrev-table 'c-mode-abbrev-table
  '(
    ("jd" "printf(stderr, \"poop: \");" nil :count 0)
   ))
(define-abbrev-table 'emacs-lisp-mode-abbrev-table
  '(
    ("jd" "(message \"poop: \")" nil :count 0)
   ))
(define-abbrev-table 'global-abbrev-table
  '(
    ("jT" "" (lambda nil (interactive) (insert (format-time-string "%Y%m%d%H%M%S"))) :count 0)
    ("ja" "" (lambda nil (interactive) (insert (format-time-string "<%Y-%m-%d>"))) :count 1)
    ("ji" "(interactive)" nil :count 1)
    ("jl" "(lambda ()" nil :count 0)
    ("jt" "" (lambda nil (interactive) (insert (format-time-string "%Y%m%d"))) :count 0)
   ))
(define-abbrev-table 'org-mode-abbrev-table
  '(
    ("je" "#+attr_org: :width 300px
,#+attr_html: :class emacs-img" nil :count 0)
    ("jg" "#+attr_org: :width 300px
,#+attr_html: :width 100%" nil :count 0)
    ("jk" "#+begin: kanban :layout (\"...\") :scope nil :range (\"TODO\" . \"DONE\") :sort \"O\" :depth 2 :compressed t
,#+end:" nil :count 0)
    ("jm" "#+hugo: more" nil :count 0)
    ("jo" "---
,#+TOC: headlines 1 local
---" nil :count 0)
    ("jp" "~--APT--~" nil :count 0)
   ))
(define-abbrev-table 'sh-mode-abbrev-table
  '(
    ("jd" "echo \"poop: \"" nil :count 0)
   ))
#+end_src

** <2024-12-16>

feat(emacs): Enhance =dired= and =image-dired= configurations

- *=dired=*:
  - Added a new keybinding (=C-c i=) for =my/image-dired-sort=.
  - Improved file management capabilities within Dired interface.

- *Spell-checking*:
  - Integrated =dictionary.el= for on-the-fly word definitions.
  - Added =C-c s d= for dictionary lookup.
  - Introduced =C-0= as dedicated keybinding for =ispell-word=.

- *=image-dired=*:
  - Introduced custom behavior for image manipulation:
    - Added =my/image-dired-sort= for better image sorting in Dired.
    - Defined keybindings to streamline navigation and editing in =image-dired=.
  - Configured a split-buffer layout for enhanced productivity.
  - Added helper functions (=my/image-save-as=, =my/delete-current-image-and-move-to-next=, etc.) for managing images programmatically.
  - Enabled external image viewing via =gthumb=.

** <2024-12-14>

Added my/find-file to be a more flexible ripgrep based finding file tool.

** <2024-12-14>

Added deadgrep kind of replacement called my/grep with leveraging ripgrep into a type of grep Emacs buffer.

** <2024-12-10>

Added ada-mode support out of the box.

Yes, ada-mode was removed from emacs and it was recommended to use the ada-mode supplied by AdaCore, however this is all but impossible to set up so including =ada-light=mode= as part of the configuration.

https://github.com/sebastianpoeplau/ada-light-mode

** <2024-12-09>

Added =visual-fill-column-mode= replacement with a simple elisp function (see solution in roadmap)

** <2024-12-09>

Added =my-icomplete-copy-candidate= to allow embark like copying of current candidate (see solution in roadmap)

** <2024-12-09>

Added =my/recentf-open= to bypass old default recentf-open interface (see solution in roadmap)

** <2024-12-09>

enhance window navigation and introduce my rainbow mode (see solution in roadmap)

- Refactored `my/quick-window-jump` for better window labelling and overlay management:
  - Improved window sorting logic for more accurate top-to-bottom, left-to-right navigation.
  - Added visual overlays to display window shortcuts with labels.
- Introduced `my/rainbow-mode`:
  - Overlays hex color values in buffers with their respective colors for better readability.
- Minor refactor to `my/copy-buffer-to-kill-ring` by removing redundant `save-excursion`.
- Corrected a typo: Renamed `identation-core` to `indentation-core`.
- Added `my/eglot-dir-locals` for ADA mode to simplify `.dir-locals.el` file creation:
  - Supports Eglot workspace configuration based on paths from Dired.
- Updated version control handling to consider only `SVN` and `Git` backends.

